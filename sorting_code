#include "main.h"
#include "stm32f1xx_hal.h"
#include "i2c.h"
#include "tim.h"
#include "gpio.h"
#include "lcd.h"

// Color Counters
int redCount = 0, blueCount = 0, greenCount = 0;

// Function Prototypes
void Motor_Control(int speed);
void Servo_Control(int angle);
int Detect_Color();
void LCD_PrintInt(int value);

int main(void)
{
    HAL_Init();
    SystemClock_Config();
    MX_GPIO_Init();
    MX_I2C1_Init();
    MX_TIM2_Init();
    MX_TIM3_Init();

    // Initialize LCD
    LCD_Init();
    LCD_Clear();
    LCD_SetCursor(0, 0);
    LCD_Print("Sorting System");

    HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
    HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);

    while (1)
    {
        int color = Detect_Color();

        // Sorting and Counting Logic
        if (color == 1) {
            redCount++;
            Servo_Control(30);
        }
        else if (color == 2) {
            blueCount++;
            Servo_Control(60);
        }
        else if (color == 3) {
            greenCount++;
            Servo_Control(90);
        }

        // Update LCD Display
        LCD_Clear();
        LCD_SetCursor(0, 0);
        LCD_Print("Red: ");
        LCD_PrintInt(redCount);

        LCD_SetCursor(0, 1);
        LCD_Print("Blue: ");
        LCD_PrintInt(blueCount);

        // Optionally print green count
        HAL_Delay(1000);
    }
}

// Motor Control
void Motor_Control(int speed)
{
    __HAL_TIM_SET_COMPARE(&htim2, TIM_CHANNEL_1, speed);
}

// Servo Control
void Servo_Control(int angle)
{
    int pulseWidth = (angle * 10) + 500;
    __HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, pulseWidth);
    HAL_Delay(500);
    Servo_Control(0); // Reset
}

// Color Detection (Placeholder)
int Detect_Color()
{
    uint8_t data[2];
    HAL_I2C_Mem_Read(&hi2c1, 0x29 << 1, 0x0D, I2C_MEMADD_SIZE_8BIT, data, 2, 100);

    if (data[0] == 1) return 1;
    if (data[0] == 2) return 2;
    if (data[0] == 3) return 3;
    return 0;
}

// LCD Helper Functions
void LCD_PrintInt(int value)
{
    char buffer[10];
    sprintf(buffer, "%d", value);
    LCD_Print(buffer);
}
